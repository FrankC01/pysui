# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: google/rpc/status.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("Status",)

from dataclasses import dataclass

import betterproto2

from ...message_pool import default_message_pool

_COMPILER_VERSION = "0.7.1"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class Status(betterproto2.Message):
    """
    The `Status` type defines a logical error model that is suitable for
    different programming environments, including REST APIs and RPC APIs. It is
    used by [gRPC](https://github.com/grpc). Each `Status` message contains
    three pieces of data: error code, error message, and error details.

    You can find out more about this error model and how to work with it in the
    [API Design Guide](https://cloud.google.com/apis/design/errors).
    """

    code: "int" = betterproto2.field(1, betterproto2.TYPE_INT32)
    """
    The status code, which should be an enum value of
    [google.rpc.Code][google.rpc.Code].
    """

    message: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    A developer-facing error message, which should be in English. Any
    user-facing error message should be localized and sent in the
    [google.rpc.Status.details][google.rpc.Status.details] field, or localized
    by the client.
    """

    details: "list[_protobuf__.Any]" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    A list of messages that carry the error details.  There is a common set of
    message types for APIs to use.
    """


default_message_pool.register_message("google.rpc", "Status", Status)


from .. import protobuf as _protobuf__
